1) Изменение в файле в основном проекте (ветка основная). Коммит.
















Преимущества
1) Видна история подпроекта
2) Легче поддерживать. Работа сводится только к мёржу изменений в главный проект, если таковые имеются, а также к переключению между ветками.



Недостатки:
1) В UI коммиты основного проекта и подпроекта перемешиваются
2) Так как методика subtree предполагает собой полную копию другого репозитория, то файлы полнстью копируются. Требуется отдельный коммит для мержа.



Рекомендации:
1) Подпроект лучше отдельно выкачивать и там внсоить изменения, а потом подтягивать






Algo
1) встать на ветку подмодуля
2) подтянут изменения
3) вернутсья в глав проект
4) слить изменения
git merge --squash -s subtree --no-commit --allow-unrelated-histories rack_branch 

Help:
https://help.github.com/articles/about-git-subtree-merges/








e019cf4a950c08a8f4b2821614a3520292812c38






























сценарии:
1) внести изменения в подмодуле
2) без подтягивания в оснвоном проекте тоже внести изменения
3) закоммитить и запушить
4) обновиться

еще один:
1) повторить 1-3 из предыдущего)
2) внести локально изменения в подмодуле, закоммитить и запушить
3) подтянуть и посмореть что будет

еще
1) повторить 1-2 из предыдущего)
2) 




































I. Как работает получение изменений?
1) Submodules
Есть два способа: а) перейти в подпроект, запулить и смержить в основной и б) из директории проекта запустить git submodule update --remote
После сделать коммит в основной проект с обновленной ссылкой на отделенный хед.
2) 